<acvila> 
	<head> TEST PROGRAM</head>
	<body>
		string::a
		<struct nume>
			<camp int::a/>
			<camp int::a/>
		</struct>

		<defines>
			<constant string::a 1234/>
			<constant string::a 1234/>
		</defines>

		<function int::a>
			<param string::a/>
			<param string::a/>
			<param string::a/>
			
			::a = 3
			string::x
			<function int::a>
			</function>
		</function>

		<class alx>
			<var string::nume visible/>
			<function int::alex>
			</function>
		</class>

		int::a
		::a_::nume = 4 + ( ::x - 20 + ( 20 + ::y ) ) + ::>asx(2)
		int::a~15~

		::a~1~ = 5
		::a_::b=4

		::>a(::x,::y,::z, ::>a(::x,::y+5), ::x*2)
		::a++
		::a&&::b
		::a-::b

		::a = "alex"
		::a = "beta"

		<if ::a==::b && ::x+2>5 || ::y+10<=5>
			<if :a:==::a>
				::a++
			<else />
				::a--
			</if>
	
			::b++
		</if>

		<for ::a++ try ::a==::b endwith ::a++>
			<if ::a==::c>
				::a--
			</if>
		</for>

		<while ::a==::b>
			::a&::b
			<if ::a==::b>
				<if :a:==::a>
					::a++
				<else />
					::a--
				</if>
	
				::b++
			</if>
		</while>
	</body>
</acvila>
